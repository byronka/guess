<project name="Guess" default="usage" >

   <!-- Source directory -->
   <property name="src.dir" value="./src" />

   <!-- Build directory -->
   <property name="build.dir" value="./build" />

    <!-- Javadocs -->
    <property name="javadocs.dir" value="./javadocs" />

    <!-- lint output -->
    <property name="lint.output.dir" value="./lint" />


	<!-- ################ -->
  <!--   COMPILATION    -->
  <!-- ################ -->
  <!-- compiling the java files into classes into the build directory -->
  <!--================================================================-->

  <!-- builds the Java classes necessary for the functioning of the
  system.  All classes are built and put in the build directory, and
  other Ant targets move these files to their intended destination -->
  <target name="compile" description="compiles all business java files">
    <mkdir dir="${build.dir}" />
    <javac 
      debug="true" 
      debuglevel="lines,vars,source" 
      includeantruntime="false" 
      classpath="lib/junit-4.12.jar"
      srcdir="${src.dir}" 
      destdir="${build.dir}">
      <compilerarg value="-Xlint:unchecked" /> <!-- for more warnings -->
    </javac>
  </target>

  <target 
    name="clean" 
    description="deletes the build and javadocs.directory">
		<delete dir="${build.dir}"/>
		<delete dir="${javadocs.dir}"/>
		<delete dir="${lint.output.dir}"/>
  </target>

  <!-- ############## -->
  <!--     TESTING    -->
  <!-- ############## -->
	<!-- Scripts for testing-->
  <!--====================================================-->

    <!-- Run the JUnit Tests -->
	<target name="test" depends="compile" description="runs the tests">
		<junit printsummary="on" fork="true" haltonfailure="yes">
		<classpath>
			<pathelement 
				path="
        build:
				lib/junit-4.12.jar:
				lib/hamcrest-core-1.3.jar " />
		</classpath>
		<formatter type="plain" usefile="false"/>
		<test name="com.renomad.guess.GuessTests"/>
	</junit>
	</target>


  <!-- ####################### -->
  <!--     STATIC ANALYSIS     -->
  <!-- ####################### -->
  <!-- Scripts for running static code analysis on the codebase -->
  <!--===========================================================-->

  <!-- static code analysis -->
    <property name="findbugs.dist.dir" value="./utils/findbugs" />

  <target name="lint-all" depends="compile" description="runs all the lint programs" >
		<antcall target="findbugs" />
	</target>

	<target name="build-lint-output">
		<mkdir dir="${lint.output.dir}"/>
	</target>

  <target name="findbugs" depends="build-lint-output">
    <taskdef name="findbugs" 
      classname="edu.umd.cs.findbugs.anttask.FindBugsTask">
      <classpath>
        <pathelement location="${findbugs.dist.dir}/lib/findbugs-ant.jar" />
      </classpath>
    </taskdef>
    <findbugs home="${findbugs.dist.dir}"
              output="html"
              outputFile="${lint.output.dir}/findbugs_output.html" >
      <sourcePath path="./src" />
      <class location="${build.dir}" />
    </findbugs>
  </target>


  <!-- ############## -->
  <!--     JAVADOC    -->
  <!-- ############## -->
	<!-- Scripts for building Javadocs -->
  <!--====================================================-->

	<!-- Creates Javadoc -->
	<target name="docs" 
    description="builds the javadocs">
		<javadoc packagenames="com.renomad.guess" sourcepath="${src.dir}" destdir="${javadocs.dir}">
			<!-- Define which files / directory should get included, we include all -->
			<fileset dir="${src.dir}">
				<include name="**" />
			</fileset>
		</javadoc>
	</target>


  <!-- ############## -->
  <!--     UTILS      -->
  <!-- ############## -->
  <!-- Scripts for helping out with using Ant   -->
  <!--====================================================-->

  <target name="usage"> 
    <echo message="To get started, read the README file."/> 
    <echo message="To build the game, type:"/> 
    <echo message="     ant compile"/> 
    <echo message=""/> 
    <echo message="  then type ./run to run the program."/> 
    <echo message="  Execute 'ant -p' for build file help."/> 
  </target> 

  <target name="debug" description="see all properties configured">
    <echoproperties/>
  </target>

</project>
